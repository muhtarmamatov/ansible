---
- name: Ensure HAProxy is installed.
  package: name=haproxy state=present

- name: Ensure net-tools installed
  package: name=net-tools state=present

- name: Ensure HAProxy is enabled (so init script will start it on Debian).
  lineinfile:
    dest: /etc/default/haproxy
    regexp: "^ENABLED.+$"
    line: "ENABLED=1"
    state: present
  when: ansible_os_family == 'Debian'

- name: Get HAProxy version.
  command: haproxy -v
  register: haproxy_version_result
  changed_when: false
  check_mode: false

- name: Set HAProxy version.
  set_fact:
    haproxy_version: '{{ haproxy_version_result.stdout_lines[0] | regex_replace("^HA-?Proxy version (\d+(\.\d+)*).*$", "\1") }}'

- name: Check if net.ipv4.ip_nonlocal_bind=1 is already defined
  lineinfile:
    state: absent
    path: "/etc/sysctl.conf"
    regexp: "^net.ipv4.ip_nonlocal_bind=1"
  check_mode: true
  changed_when: false # This just makes things look prettier in the logs
  register: check

- name: Define net.ipv4.ip_nonlocal_bind=1 if not undefined
  lineinfile:
    state: present
    path: "/etc/sysctl.conf"
    line: "net.ipv4.ip_nonlocal_bind=1"
  when: check.found == 0

- name: Enable sysctl 
  command: sysctl -p

- name: Backup haproxy config file
  command: mv /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.back

- name: Copy HAProxy configuration in place.
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    mode: 0644
    validate: haproxy -f %s -c -q
  notify: restart haproxy

- name: Ensure haproxy listening specified port
  command: netstat -ntlp
  register: haproxy_status

- name: Haproxy status get
  debug:
    msg: '{{ haproxy_status }}'

- name: Ensure HAProxy is started and enabled on boot.
  service: name=haproxy state=started enabled=yes
